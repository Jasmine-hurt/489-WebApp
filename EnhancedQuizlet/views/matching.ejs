<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Matching Game</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
	  <link rel="stylesheet" href="/stylesheets/style.css" />
    <style>
      .matching-game-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 50px;
        margin-top: 40px;
      }
      .column {
        display: flex;
        flex-direction: column;
        gap: 15px;
        width: 300px;
      }
      .item {
        padding: 15px;
        background-color: #ffffff;
        text-align: center;
        border: 2px solid #dee2e6;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 500;
      }
      .item:hover {
        background-color: #e9ecef;
      }
      .item.selected {
        background-color: #0d6efd;
        color: white;
        border-color: #0d6efd;
      }
      .item.matched {
        background-color: #198754;
        color: white;
        cursor: not-allowed;
        border-color: #198754;
      }
      .reset-btn-container {
        text-align: center;
        margin: 30px 0;
      }
    </style>
  </head>
  <body>
    <!-- Navigation Bar -->
    <%- include('components/navbar') %>

    <div class="container my-5">
      <h2 class="text-center mt-4">Matching Game</h2>

      <div class="matching-game-container">
        <div class="column terms">
          <h5 class="text-center">Terms</h5>
        </div>
        <div class="column descriptions">
          <h5 class="text-center">descriptions</h5>
        </div>
      </div>

      <div class="reset-btn-container">
        <button class="btn btn-primary" id="reset-btn">Restart Game</button>
      </div>
    </div>

    <script>
      const flashcards = <%- JSON.stringify(flashcards) %>;

      const termsContainer = document.querySelector('.terms');
      const descriptionsContainer = document.querySelector('.descriptions');
      const resetButton = document.getElementById('reset-btn');
      let selectedItems = [];

      function shuffle(array) {
        return array.sort(() => Math.random() - 0.5);
      }

      function generateCards() {
        termsContainer.innerHTML = '<h5 class="text-center">Terms</h5>';
        descriptionsContainer.innerHTML = '<h5 class="text-center">descriptions</h5>';

        const shuffledTerms = shuffle([...flashcards]);
        const shuffledDefs = shuffle([...flashcards]);

        shuffledTerms.forEach(card => {
          const termDiv = document.createElement('div');
          termDiv.classList.add('item');
          termDiv.textContent = card.term;
          termDiv.dataset.match = card.description;
          termDiv.dataset.type = 'term';
          termsContainer.appendChild(termDiv);
        });

        shuffledDefs.forEach(card => {
          const defDiv = document.createElement('div');
          defDiv.classList.add('item');
          defDiv.textContent = card.description;
          defDiv.dataset.match = card.term;
          defDiv.dataset.type = 'description';
          descriptionsContainer.appendChild(defDiv);
        });

        addClickEventListeners();
      }

      function addClickEventListeners() {
        document.querySelectorAll('.item').forEach(item => {
          item.addEventListener('click', () => handleSelection(item));
        });
      }

      function handleSelection(item) {
        if (item.classList.contains('matched') || item.classList.contains('selected')) return;

        // If one item already selected, ensure second is from opposite type
        if (selectedItems.length === 1) {
          const existingType = selectedItems[0].dataset.type;
          if (item.dataset.type === existingType) return;
        }

        item.classList.add('selected');
        selectedItems.push(item);

        if (selectedItems.length === 2) {
          const [first, second] = selectedItems;

          const isMatch =
            (first.dataset.type === 'term' && second.dataset.type === 'description' && first.dataset.match === second.textContent) ||
            (first.dataset.type === 'description' && second.dataset.type === 'term' && second.dataset.match === first.textContent);

          if (isMatch) {
            first.classList.add('matched');
            second.classList.add('matched');
          }

          setTimeout(() => {
            first.classList.remove('selected');
            second.classList.remove('selected');
            selectedItems = [];
          }, 600);
        }
      }


      resetButton.addEventListener('click', () => {
        selectedItems = [];
        generateCards();
      });

      generateCards();
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
